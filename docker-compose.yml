version: "2"
services:
  python-flask:
    build:
      # Specify our app directory as the context
      context: ./apps/flask-example-00
      # Use the Dockerfile that exists within the directory we specified above
      dockerfile: ./Dockerfile
    ports:
      # Flask server
      - "5000:5000"
      # Flask server debug port
      - "5678:5678"
    environment:
      # Specify the path within our Docker container that contains our application code
      FLASK_APP: /code/app.py
      FLASK_ENV: development
    command: flask run --host=0.0.0.0 --port=5000
    volumes:
      # Map our local directory to our Docker application root so that any changes we make are immediately available
      - ./apps/flask-example-00/:/code
    depends_on:
      - redis
  redis:
    image: redis
    # ports:
    #   - "6379:6379"
  nextjs:
    ports:
      - 3000:3000
      - 9229:9229
      - 6006:6006
    build:
      context: ./apps/nextjs-typescript-example-00/app
      dockerfile: Dockerfile
    volumes:
      - ./apps/nextjs-typescript-example-00/app:/usr/src/app
      # Prevent the node_modules and .next folders in the Docker container from being accidentally overwritten with our initial mapping of our local directory to /usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/.next
    env_file:
      - ./apps/nextjs-typescript-example-00/app/.env.local
    depends_on:
      - python-flask
  cypress:
    image: cypress
    build: ./apps/cypress
    container_name: cypress
    depends_on:
      - nextjs
    # note: inside cypress container, the network allows accessing
    # "nextjs" host under name "nextjs"
    # so "curl http://nextjs:3000" would return whatever the webserver
    # in the "nextjs" container is cooking on port 3000
    # see https://docs.docker.com/compose/networking/
    environment:
      - CYPRESS_baseUrl=http://nextjs:3000
    command: npx cypress run
    # mount the host directory nextjs/cypress and the file nextjs/cypress.json as
    # volumes within the container
    # this means that:
    #  1. anything that Cypress writes to these folders (e.g., screenshots,
    #     videos) appears also on the Docker host's filesystem
    #  2. any change that the developer applies to Cypress files on the host
    #     machine immediately takes effect within the cypress container (no docker
    #     rebuild required).
    volumes:
      - ./apps/cypress/cypress:/app/cypress
      - ./apps/cypress/cypress.json:/app/cypress.json
